package com.blk.uhabits.widgets;import android.support.v7.widget.CardView;import android.view.Gravity;import android.view.View;import android.view.ViewGroup;import android.view.ViewStub;import android.widget.TableRow;import com.blk.uhabits.R;public class CardBackView {    public static final int FLAG_SHARE = 1; // 0x01    public static final int FLAG_EDIT = 1<<1; // 0x02    public static final int FLAG_EDIT_COLOR = 1<<2; // 0x04    public static final int FLAG_EXPORT_DATA = 1<<3; // 0x08    View mColorLayout;    View mExportLayout;    View mEditLayout;    View mShareLayout;    View mCommandContainer;    private CardView mCardBackView;    private ViewStub mCardBackViewStub;    public CardBackView(ViewStub cardBackViewStub) {        mCardBackViewStub = cardBackViewStub;    }    public void setShareListener(View.OnClickListener shareListner) {        mShareLayout.setOnClickListener(shareListner);    }    public void setExportListener(View.OnClickListener subscribeListner) {        mExportLayout.setOnClickListener(subscribeListner);    }    public void setColorListener(View.OnClickListener commandListner) {        mColorLayout.setOnClickListener(commandListner);    }    public void setEditListener(View.OnClickListener editListener) {        mEditLayout.setOnClickListener(editListener);    }    public void ensureCardBackView() {        if (mCardBackView == null) {            mCardBackView = (CardView) mCardBackViewStub.inflate();            mCardBackView.setVisibility(View.INVISIBLE);            ViewGroup commandView = (ViewGroup) mCardBackView.findViewById(R.id.commandgroup);            mColorLayout = commandView.findViewById(R.id.color_command_layout);            mExportLayout = commandView.findViewById(R.id.export_command_layout);            mEditLayout = commandView.findViewById(R.id.edit_command_layout);            mShareLayout = commandView.findViewById(R.id.share_command_layout);            mCommandContainer = commandView.findViewById(R.id.command_container);        }    }    public void setVisibility(int visibility) {        if (mCardBackView != null) mCardBackView.setVisibility(visibility);    }    public void setBackgroundColor(int color) {        if (mCardBackView != null) mCardBackView.setCardBackgroundColor(color);    }    public void setAlpha(float alpha) {        if (mCardBackView != null) mCardBackView.setAlpha(alpha);    }    private int setVisibilityMenuItems(int bitmask) {        int result = 0;        if (0 != (bitmask & FLAG_SHARE)) {            mShareLayout.setVisibility(View.VISIBLE);            result++;        } else {            mShareLayout.setVisibility(View.GONE);        }        if (0 != (bitmask & FLAG_EDIT)) {            mEditLayout.setVisibility(View.VISIBLE);            result++;        } else {            mEditLayout.setVisibility(View.GONE);        }        if (0 != (bitmask & FLAG_EDIT_COLOR)) {            mColorLayout.setVisibility(View.VISIBLE);            result++;        } else {            mColorLayout.setVisibility(View.GONE);        }        if (0 != (bitmask & FLAG_EXPORT_DATA)) {            mExportLayout.setVisibility(View.VISIBLE);            result++;        } else {            mExportLayout.setVisibility(View.GONE);        }        return result;    }    public int requestLayout(int bitmask) {        int result = setVisibilityMenuItems(bitmask);        float weight;        switch (result) {            case 1:                weight = 2f;                break;            case 2:                weight = 6f;                break;            case 3:                weight = 18f;                break;            default:                weight = 6f;                break;        }        TableRow.LayoutParams params = new TableRow.LayoutParams(0, TableRow.LayoutParams.MATCH_PARENT, weight);        params.gravity = Gravity.CENTER;        params.setLayoutDirection(View.LAYOUT_DIRECTION_LTR);        mCommandContainer.setLayoutParams(params);        return result;    }}